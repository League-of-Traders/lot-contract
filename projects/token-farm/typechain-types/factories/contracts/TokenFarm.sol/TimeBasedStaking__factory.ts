/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TimeBasedStaking,
  TimeBasedStakingInterface,
} from "../../../contracts/TokenFarm.sol/TimeBasedStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBEP20",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "contract IBEP20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_totalRewardCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Settled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockupDays",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BLOCKS_PER_DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BLOCKS_PER_YEAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "existing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNum",
        type: "uint256",
      },
    ],
    name: "getPerBlockReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IBEP20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "settleReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockupDays",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastSettledBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockupEndBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IBEP20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewardCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161221a38038061221a833981810160405281019061003291906102c5565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c9190610327565b60405180910390fd5b6100b48161015660201b60201c565b506001808190555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060a081815250504360808181525050505050610342565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061024a8261021f565b9050919050565b600061025c8261023f565b9050919050565b61026c81610251565b811461027757600080fd5b50565b60008151905061028981610263565b92915050565b6000819050919050565b6102a28161028f565b81146102ad57600080fd5b50565b6000815190506102bf81610299565b92915050565b6000806000606084860312156102de576102dd61021a565b5b60006102ec8682870161027a565b93505060206102fd8682870161027a565b925050604061030e868287016102b0565b9150509250925092565b6103218161023f565b82525050565b600060208201905061033c6000830184610318565b92915050565b60805160a051611e746103a660003960008181610edf01528181610f55015281816110650152818161142c01526114d501526000818161079201528181610de201528181610eb301528181610f12015281816111a7015261146c0152611e746000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063f258584c1161007c578063f258584c146102f8578063f2fde38b14610316578063f3443cb114610332578063f40f0f5214610362578063f7c618c114610392578063fd5e6dd1146103b057610137565b80638da5cb5b146102525780638f51bdef14610270578063b7108c541461028c578063d2cbf7ad146102bc578063d37db1d2146102da57610137565b80636bb987fe116100ff5780636bb987fe146101d2578063715018a6146101f057806372f702f3146101fa5780637b0472f014610218578063817b1cd21461023457610137565b806316934fc41461013c5780632e1a7d4d1461017057806343352d611461018c57806348cd4cb1146101aa5780634e71d92d146101c8575b600080fd5b6101566004803603810190610151919061163b565b6103e0565b604051610167959493929190611681565b60405180910390f35b61018a60048036038101906101859190611700565b610416565b005b610194610702565b6040516101a191906117eb565b60405180910390f35b6101b2610790565b6040516101bf919061180d565b60405180910390f35b6101d06107b4565b005b6101da6109bb565b6040516101e7919061180d565b60405180910390f35b6101f86109c1565b005b6102026109d5565b60405161020f9190611887565b60405180910390f35b610232600480360381019061022d91906118a2565b6109fb565b005b61023c610d38565b604051610249919061180d565b60405180910390f35b61025a610d3e565b60405161026791906118f1565b60405180910390f35b61028a6004803603810190610285919061163b565b610d67565b005b6102a660048036038101906102a19190611700565b610eaf565b6040516102b3919061180d565b60405180910390f35b6102c4610ff8565b6040516102d1919061180d565b60405180910390f35b6102e261105c565b6040516102ef919061180d565b60405180910390f35b610300611063565b60405161030d919061180d565b60405180910390f35b610330600480360381019061032b919061163b565b611087565b005b61034c6004803603810190610347919061163b565b61110d565b6040516103599190611927565b60405180910390f35b61037c6004803603810190610377919061163b565b61112d565b604051610389919061180d565b60405180910390f35b61039a611207565b6040516103a79190611887565b60405180910390f35b6103ca60048036038101906103c59190611700565b61122d565b6040516103d791906118f1565b60405180910390f35b60046020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b61041e61126c565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600082118015610475575081816000015410155b6104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab9061199f565b60405180910390fd5b80600401544310156104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290611a0b565b60405180910390fd5b61050433610d67565b818160000160008282546105189190611a5a565b9250508190555081600760008282546105319190611a5a565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610595929190611a8e565b6020604051808303816000875af11580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190611ae3565b5060008160000154036106a857600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090556003820160009055600482016000905550506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516106ee919061180d565b60405180910390a2506106ff6112b2565b50565b6060600580548060200260200160405190810160405280929190818152602001828054801561078657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161073c575b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6107bc61126c565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060040154431015610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90611b5c565b60405180910390fd5b61084f33610d67565b6000816001015490506000811161089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290611bc8565b60405180910390fd5b60008260010181905550808260030160008282546108b99190611be8565b92505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161091d929190611a8e565b6020604051808303816000875af115801561093c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109609190611ae3565b503373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a826040516109a7919061180d565b60405180910390a250506109b96112b2565b565b61708081565b6109c96112bb565b6109d36000611342565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a0361126c565b60008211610a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3d90611c68565b60405180910390fd5b6001811015610a8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8190611cd4565b60405180910390fd5b610a9333610d67565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610af293929190611cf4565b6020604051808303816000875af1158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b359190611ae3565b50600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c43576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905082816000016000828254610c9a9190611be8565b9250508190555061708082610caf9190611d2b565b43610cba9190611be8565b81600401819055508260076000828254610cd49190611be8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee908484604051610d23929190611d6d565b60405180910390a250610d346112b2565b5050565b60075481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541480610dbf57506000600754145b15610dd35743816002018190555050610eac565b600080826002015411610e06577f0000000000000000000000000000000000000000000000000000000000000000610e0c565b81600201545b90506000439050808210610e2257505050610eac565b6000610e3383838660000154611406565b905080846001016000828254610e499190611be8565b925050819055508184600201819055508473ffffffffffffffffffffffffffffffffffffffff167f7823e479a1a4ebe2418874847436f8a1680c5ee5b17f38bb59dbff28e1b4555282604051610e9f919061180d565b60405180910390a2505050505b50565b60007f000000000000000000000000000000000000000000000000000000000000000082111580610f00575060007f0000000000000000000000000000000000000000000000000000000000000000145b15610f0e5760009050610ff3565b60007f000000000000000000000000000000000000000000000000000000000000000083610f3c9190611a5a565b9050600062a0668082610f4f9190611dc5565b905060007f00000000000000000000000000000000000000000000000000000000000000009050600080600090505b838111610fdc5760008114610fab576003600284610f9c9190611d2b565b610fa69190611dc5565b610fb9565b600383610fb89190611dc5565b5b91508183610fc79190611a5a565b92508080610fd490611df6565b915050610f7e565b5062a0668081610fec9190611dc5565b9450505050505b919050565b60008061100443610eaf565b9050600081148061101757506000600754145b15611026576000915050611059565b600754670de0b6b3a764000062a06680836110419190611d2b565b61104b9190611d2b565b6110559190611dc5565b9150505b90565b62a0668081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61108f6112bb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111015760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110f891906118f1565b60405180910390fd5b61110a81611342565b50565b60066020528060005260406000206000915054906101000a900460ff1681565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154148061118657506000600754145b15611198578060010154915050611202565b6000808260020154116111cb577f00000000000000000000000000000000000000000000000000000000000000006111d1565b81600201545b9050600043905060006111e983838660000154611406565b90508084600101546111fb9190611be8565b9450505050505b919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005818154811061123d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002600154036112a8576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b6112c36115d0565b73ffffffffffffffffffffffffffffffffffffffff166112e1610d3e565b73ffffffffffffffffffffffffffffffffffffffff1614611340576113046115d0565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161133791906118f1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000828410158061141957506000600754145b1561142757600090506115c9565b6000807f0000000000000000000000000000000000000000000000000000000000000000905060005b60648110156115c257600062a066808261146a9190611d2b565b7f00000000000000000000000000000000000000000000000000000000000000006114959190611be8565b9050600062a06680826114a89190611be8565b905060008084146114d15760036002866114c29190611d2b565b6114cc9190611dc5565b6114ff565b60037f00000000000000000000000000000000000000000000000000000000000000006114fe9190611dc5565b5b9050808561150d9190611a5a565b9450818a1061151e575050506115b5565b82891161152d575050506115c2565b6000838b1161153c578361153e565b8a5b90506000838b1061154f5783611551565b8a5b9050600082826115619190611a5a565b9050600062a06680856115749190611dc5565b905060006007548d83856115889190611d2b565b6115929190611d2b565b61159c9190611dc5565b9050808b6115aa9190611be8565b9a5050505050505050505b8080600101915050611450565b5081925050505b9392505050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611608826115dd565b9050919050565b611618816115fd565b811461162357600080fd5b50565b6000813590506116358161160f565b92915050565b600060208284031215611651576116506115d8565b5b600061165f84828501611626565b91505092915050565b6000819050919050565b61167b81611668565b82525050565b600060a0820190506116966000830188611672565b6116a36020830187611672565b6116b06040830186611672565b6116bd6060830185611672565b6116ca6080830184611672565b9695505050505050565b6116dd81611668565b81146116e857600080fd5b50565b6000813590506116fa816116d4565b92915050565b600060208284031215611716576117156115d8565b5b6000611724848285016116eb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611762816115fd565b82525050565b60006117748383611759565b60208301905092915050565b6000602082019050919050565b60006117988261172d565b6117a28185611738565b93506117ad83611749565b8060005b838110156117de5781516117c58882611768565b97506117d083611780565b9250506001810190506117b1565b5085935050505092915050565b60006020820190508181036000830152611805818461178d565b905092915050565b60006020820190506118226000830184611672565b92915050565b6000819050919050565b600061184d611848611843846115dd565b611828565b6115dd565b9050919050565b600061185f82611832565b9050919050565b600061187182611854565b9050919050565b61188181611866565b82525050565b600060208201905061189c6000830184611878565b92915050565b600080604083850312156118b9576118b86115d8565b5b60006118c7858286016116eb565b92505060206118d8858286016116eb565b9150509250929050565b6118eb816115fd565b82525050565b600060208201905061190660008301846118e2565b92915050565b60008115159050919050565b6119218161190c565b82525050565b600060208201905061193c6000830184611918565b92915050565b600082825260208201905092915050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000611989600e83611942565b915061199482611953565b602082019050919050565b600060208201905081810360008301526119b88161197c565b9050919050565b7f4c6f636b757020706572696f64206e6f7420656e646564000000000000000000600082015250565b60006119f5601783611942565b9150611a00826119bf565b602082019050919050565b60006020820190508181036000830152611a24816119e8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a6582611668565b9150611a7083611668565b9250828203905081811115611a8857611a87611a2b565b5b92915050565b6000604082019050611aa360008301856118e2565b611ab06020830184611672565b9392505050565b611ac08161190c565b8114611acb57600080fd5b50565b600081519050611add81611ab7565b92915050565b600060208284031215611af957611af86115d8565b5b6000611b0784828501611ace565b91505092915050565b7f436c61696d206c6f636b65640000000000000000000000000000000000000000600082015250565b6000611b46600c83611942565b9150611b5182611b10565b602082019050919050565b60006020820190508181036000830152611b7581611b39565b9050919050565b7f4e6f207265776172647300000000000000000000000000000000000000000000600082015250565b6000611bb2600a83611942565b9150611bbd82611b7c565b602082019050919050565b60006020820190508181036000830152611be181611ba5565b9050919050565b6000611bf382611668565b9150611bfe83611668565b9250828201905080821115611c1657611c15611a2b565b5b92915050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b6000611c52600e83611942565b9150611c5d82611c1c565b602082019050919050565b60006020820190508181036000830152611c8181611c45565b9050919050565b7f4d696e696d756d203120646179206c6f636b7570207265717569726564000000600082015250565b6000611cbe601d83611942565b9150611cc982611c88565b602082019050919050565b60006020820190508181036000830152611ced81611cb1565b9050919050565b6000606082019050611d0960008301866118e2565b611d1660208301856118e2565b611d236040830184611672565b949350505050565b6000611d3682611668565b9150611d4183611668565b9250828202611d4f81611668565b91508282048414831517611d6657611d65611a2b565b5b5092915050565b6000604082019050611d826000830185611672565b611d8f6020830184611672565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611dd082611668565b9150611ddb83611668565b925082611deb57611dea611d96565b5b828204905092915050565b6000611e0182611668565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e3357611e32611a2b565b5b60018201905091905056fea26469706673582212201bde85dd7d75abd242816f8094ff7c05d26ecdcb6c318fbc537824565d748e0264736f6c634300081a0033";

type TimeBasedStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimeBasedStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimeBasedStaking__factory extends ContractFactory {
  constructor(...args: TimeBasedStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stakingToken: AddressLike,
    _rewardToken: AddressLike,
    _totalRewardCap: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      _totalRewardCap,
      overrides || {}
    );
  }
  override deploy(
    _stakingToken: AddressLike,
    _rewardToken: AddressLike,
    _totalRewardCap: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      _totalRewardCap,
      overrides || {}
    ) as Promise<
      TimeBasedStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TimeBasedStaking__factory {
    return super.connect(runner) as TimeBasedStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeBasedStakingInterface {
    return new Interface(_abi) as TimeBasedStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TimeBasedStaking {
    return new Contract(address, _abi, runner) as unknown as TimeBasedStaking;
  }
}
